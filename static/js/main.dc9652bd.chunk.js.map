{"version":3,"sources":["components/Form.jsx","components/FilterButton.jsx","components/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","placeholder","value","onChange","target","disabled","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","newName","setNewName","isEditing","setEditing","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","taskList","map","filterList","tasksNoun","length","headingText","remainingTasks","editedTaskList","updatedTasks","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc9652bd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            Write what needs to be done\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Add a Task\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          disabled={name < 1}\r\n          type=\"submit\"\r\n          className=\"btn btn__primary btn__lg\"\r\n        >\r\n          Add\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn toggle-btn\"\r\n        aria-pressed={props.isPressed}\r\n        onClick={() => props.setFilter(props.name)}\r\n      >\r\n        <span className=\"visually-hidden\">Show </span>\r\n        <span>{props.name}</span>\r\n        <span className=\"visually-hidden\"> tasks</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction Todo(props) {\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [isEditing, setEditing] = useState(false);\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n          ref={editFieldRef}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          className=\"zero\"\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          onClick={() => setEditing(true)}\r\n          ref={editButtonRef}\r\n        >\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn__danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFieldRef.current.focus();\r\n    }\r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\"\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\"\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => <Todo id={task.id}\n     name={task.name} \n     completed={task.completed} \n     key={task.id}\n     toggleTaskCompleted={toggleTaskCompleted}\n     deleteTask={deleteTask} \n     editTask={editTask}\n     />);\n  const filterList = FILTER_NAMES.map(name => (\n      <FilterButton key={name} \n      name={name} \n      isPressed={name === filter}\n      setFilter={setFilter}/>\n    ));\n  const tasksNoun = taskList.length === 1 || taskList.length === 0  ? 'task' : 'tasks';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n  \n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n}\n\nconst listHeadingRef = useRef(null);\nconst prevTaskLength = usePrevious(tasks.length);\n\nuseEffect(() => {\n  if (tasks.length - prevTaskLength === -1) {\n    listHeadingRef.current.focus();\n  }\n}, [tasks.length, prevTaskLength]);\n\n  return (\n    <div id=\"one\"className=\"todoapp stack-large\">\n      <h1>TodoApp</h1>\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n       {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef} >\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n       {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}